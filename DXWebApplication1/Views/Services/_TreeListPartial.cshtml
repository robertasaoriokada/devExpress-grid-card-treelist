@{
    var treeList = Html.DevExpress().TreeList(settings =>
    {
        settings.Name = "TreeList";
        settings.CallbackRouteValues = new { Controller = "Services", Action = "TreeListPartial" };

        settings.SettingsEditing.AddNewNodeRouteValues = new { Controller = "Services", Action = "TreeListPartialAddNew" };
        settings.SettingsEditing.UpdateNodeRouteValues = new { Controller = "Services", Action = "TreeListPartialUpdate" };
        settings.SettingsEditing.DeleteNodeRouteValues = new { Controller = "Services", Action = "TreeListPartialDelete" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Services", Action = "BatchEditingUpdateModel" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.Width = 50;
        //settings.CommandColumn.NewButton.Image.Url = 
        settings.CommandColumn.NewButton.Visible = true;
        settings.CommandColumn.DeleteButton.Visible = true;
        settings.CommandColumn.EditButton.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.SettingsEditing.Mode = TreeListEditMode.Batch;
        settings.SettingsEditing.AllowRecursiveDelete = true;
        settings.Width = Unit.Percentage(95);

        //settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        //settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;

        settings.SettingsSelection.Enabled = true;

        //settings.SettingsSelection.Recursive = true;
        //settings.ClientSideEvents.BatchEditChangesSaving = "Itemizacao";
        settings.SettingsSelection.AllowSelectAll = true;
        settings.KeyFieldName = "IdService";
        settings.ParentFieldName = "ParentKey";


       
        settings.Toolbars.Add(t =>
        {
            t.ItemAlign = GridToolbarItemAlign.Right;
            t.Position = GridToolbarPosition.Bottom;
            t.Items.Add(ti => ti.Command = TreeListToolbarCommand.Update);
            t.Items.Add(ti => ti.Command = TreeListToolbarCommand.Cancel);
        });

        settings.Columns.Add(
        column =>
        {
            column.FieldName = "NumberItem";
            column.Caption = "Item";
            column.ReadOnly = true;
            column.Width = 40;
           
        }
        );
        settings.Columns.Add(
    column =>
    {
        column.FieldName = "Description";
        column.ColumnType = MVCxTreeListColumnType.TextBox;
        column.Caption = "Descrição";
    }
    );

        settings.SettingsPager.Visible = true;
        settings.SettingsSelection.Enabled = true;
    });
    if (ViewData["EditError"] != null)
    {
        treeList.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@treeList.Bind(Model).GetHtml()