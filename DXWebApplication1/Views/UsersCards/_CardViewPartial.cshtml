@{
    var cardView = Html.DevExpress().CardView(settings => {
        settings.Name = "CardView";
        settings.CallbackRouteValues = new { Controller = "UsersCards", Action = "CardViewPartial" };

        settings.SettingsEditing.AddNewCardRouteValues = new { Controller = "UsersCards", Action = "CardViewPartialAddNew" };
        settings.SettingsEditing.UpdateCardRouteValues = new { Controller = "UsersCards", Action = "CardViewPartialUpdate" };
        settings.SettingsEditing.DeleteCardRouteValues = new { Controller = "UsersCards", Action = "CardViewPartialDelete" };

        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsEditing.Mode = CardViewEditingMode.PopupEditForm;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;
        settings.SettingsBehavior.AllowFocusedCard = true;


        settings.KeyFieldName = "userId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowHeaderPanel = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByCardClick = true;
        settings.Styles.Card.Width = 450;
        settings.Width = Unit.Percentage(100);

        settings.CardLayoutProperties.Items.Add(i =>
        {

            i.ParentContainerStyle.Font.Bold = true;

        });

        settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(BreakpointsLayoutDeviceSizes.XLarge, 5);
        settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(BreakpointsLayoutDeviceSizes.Large, 4);
        settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(BreakpointsLayoutDeviceSizes.Medium, 3);
        settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(BreakpointsLayoutDeviceSizes.Small, 2);

        settings.SettingsPager.SettingsTableLayout.ColumnCount = 2;

        settings.Columns.Add(c =>
        {
            c.FieldName = "userId";
            c.Caption = "Id do usuário";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "name";
            c.Caption = "Nome";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "role";
            c.Caption = "Cargo";
            c.ColumnType = MVCxCardViewColumnType.ComboBox;
            c.EditorProperties().ComboBox(l =>
            {
                l.Items.Add("Admin", "Admin");
                l.Items.Add("Usuário", "User");
                l.Items.Add("Funcionário", "Employee");
            });
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "age";
            c.Caption = "Idade";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "bio";
            c.Caption = "Biografia";
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "createdAt";
            c.ColumnType = MVCxCardViewColumnType.DateEdit;
            c.Caption = "Data de criação";

        });

        settings.CardLayoutProperties.Items.AddCommandItem(i => {
            i.ShowNewButton = true;
            i.ShowEditButton = true;
            i.ShowDeleteButton = true;
        });
        settings.CardLayoutProperties.Items.AddEditModeCommandItem();
        //settings.CardLayoutProperties.Items.Add("userId");
        settings.CardLayoutProperties.Items.Add("name");
        settings.CardLayoutProperties.Items.Add("role");
        settings.CardLayoutProperties.Items.Add("age");
        settings.CardLayoutProperties.Items.Add("bio");
        settings.CardLayoutProperties.Items.Add("createdAt");

    });
    if (ViewData["EditError"] != null){
        cardView.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@cardView.Bind(Model).GetHtml()